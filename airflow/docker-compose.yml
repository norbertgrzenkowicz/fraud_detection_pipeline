services:
  kafka_producer:
    build:
      context: .
      dockerfile: ../kafka/Dockerfile
    container_name: kafka_producer
    volumes:
      - ../kafka/src:/app
    user: root
    command: ["python3", "synthetic_data.py"]

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow
    ports:
      - "8090:8090"
    environment:
      - AIRFLOW_HOME=~/airflow
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8090
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MODEL_PATH=/app/model/lr_model.pkl
      - MODEL_SERVICE_IMAGE_PUSH=norbertgrzenkowicz/fraud-api
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --firstname Peter --lastname Parker --role Admin --email spiderman@superhero.org --password admin &&
      airflow standalone
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ../model/:/app/model
      - ../api:/app/api
      - ../database:/app/database
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    user: root
  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
volumes:
  postgres_data: