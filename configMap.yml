# configs/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fraud-detection-config
data:
  KAFKA_TOPIC: "fraud"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "airflow"
  AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
---
# secrets/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fraud-detection-secrets
type: Opaque
data:
  # Base64 encoded values
  DB_USER: YWlyZmxvdw==  # airflow
  DB_PASSWORD: YWlyZmxvdw==  # airflow
---
# storage/postgres-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# deployments/postgres.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: fraud-detection-secrets
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraud-detection-secrets
              key: DB_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: fraud-detection-config
              key: DB_NAME
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# services/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
# deployments/kafka.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-service:9092"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
---
# services/kafka-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092
---
# deployments/zookeeper.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        ports:
        - containerPort: 2181
---
# services/zookeeper-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
---
# deployments/api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fraud-api
  template:
    metadata:
      labels:
        app: fraud-api
    spec:
      containers:
      - name: api
        image: your-registry/fraud-api:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: fraud-detection-config
        - secretRef:
            name: fraud-detection-secrets
---
# services/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: fraud-api
  ports:
  - port: 80
    targetPort: 8000
  type: LoadBalancer
---
# deployments/airflow.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
      - name: airflow
        image: your-registry/airflow:latest
        envFrom:
        - configMapRef:
            name: fraud-detection-config
        - secretRef:
            name: fraud-detection-secrets
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
      volumes:
      - name: airflow-dags
        hostPath:
          path: /path/to/your/dags
          type: Directory